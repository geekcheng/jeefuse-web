<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd"
	default-lazy-init="true">

	<description>Spring公共配置 </description>

	<!-- 定义受环境影响易变的变量 -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<!-- 标准配置 -->
				<value>classpath*:/application.properties</value>
				<!-- 集群中节点配置 -->
<!--				<value>classpath*:/application.cluster.properties</value>-->
				<!-- 本地开发环境配置 -->
<!--				<value>classpath*:/application.local.properties</value>-->
				<!-- 服务器生产环境配置 -->
				<!-- <value>file:/var/myapp/application.server.properties</value> -->
			</list>
		</property>
	</bean>

	<!-- 使用annotation 自动注册bean,并保证@Required,@Autowired的属性被注入 -->
	<context:component-scan base-package="com" />

	<!-- 数据源配置,使用应用内的DBCP数据库连接池 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="initialSize" value="20" />
		<property name="maxActive" value="200" />
		<property name="maxIdle" value="50" />
		<property name="maxWait" value="500" />
		<property name="poolPreparedStatements" value="false" />
		<property name="defaultAutoCommit" value="false" />
	</bean> 
	
	<!-- 数据源配置  proxool数据库连接池 -->
<!--	<bean id="dataSource" class="com.jeefuse.base.modules.connectPool.ProxoolDataSourceProxy">-->
<!--        <property name="driver"><value>${jdbc.driver}</value></property>-->
<!--        <property name="driverUrl"><value>${jdbc.url}</value></property>-->
<!--        <property name="user"><value>${jdbc.username}</value></property>-->
<!--        <property name="password"><value>${jdbc.password}</value></property>-->
<!--        <property name="alias"><value>dbDatasource</value></property>  -->
        <!-- 允许最大连接数,超过了这个连接，再有请求时，就排在队列中等候，最大的等待请求数-->
<!--        <property name="maximumConnectionCount"><value>200</value></property>-->
<!--        <property name="minimumConnectionCount"><value>20</value></property>-->
<!--        <property name="houseKeepingTestSql"><value>SELECT CURRENT_DATE</value></property>-->
		<!-- proxool自动侦察各个连接状态的时间间隔(毫秒),侦察到空闲的连接就马上回收,超时的销毁-->  
<!--        <property name="houseKeepingSleepTime"><value>90000</value></property>-->
        <!-- 最少保持的空闲连接数-->
<!--        <property name="prototypeCount"><value>20</value></property>-->
<!--        <property name="simultaneousBuildThrottle"><value>20</value></property>-->
<!--        <property name="trace"><value>false</value></property>-->
<!--        <property name="verbose"><value>false</value></property>-->
<!--    </bean> -->
<!--	<bean id="dataSourceFacade" class="org.logicalcobwebs.proxool.ProxoolFacade" destroy-method="shutdown"/>-->

	<!-- 数据源配置,使用应用服务器的数据库连接池 -->
	<!--<jee:jndi-lookup id="dataSource" jndi-name="java:comp/env/jdbc/ExampleDB" />-->

	<!-- Hibernate配置 -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="namingStrategy">
			<bean class="org.hibernate.cfg.ImprovedNamingStrategy" />
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
				<prop key="hibernate.cache.provider_configuration_file_resource_path">${hibernate.ehcache_config_file}</prop>
			</props>
		</property>
		<property name="packagesToScan" value="com.**.model" />
	</bean>

	<!-- 事务管理器配置,单数据源事务 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager"  />
	
	<!-- hibernate DAO操作封装 -->
	<bean id="hibernateDao" class="com.jeefuse.base.dao.hibernate.HibernateDaoImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

</beans>